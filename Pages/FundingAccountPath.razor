@page "/fundaccount"
@inject IState<WizardFundingProgressState> WizardProgressStep
@inject IDispatcher dispatcher
@inject NavigationManager Navigation


<PageTitle>Account Origination Demo</PageTitle>

<div>
    <ProgressFundingWizardComponent WizardStep="@WizardProgress()"/>
    @switch (WizardProgress())
    {
        case "1":
                            <AddChecking GoBackEvents="PreviousStep" EventAfterSubmit="OnSuccessfulSubmit" />

            @* <GetStartedJoint EventAfterSubmit="OnSuccessfulSubmit"/> *@
        break;
        case "2":
                    <AddChecking GoBackEvents="PreviousStep" EventAfterSubmit="OnSuccessfulSubmit" />

            @* <FundAccountStart EventAfterSubmit="OnSuccessfulSubmit" GoBackEvent="PreviousStep" /> *@
        break;
        default:
            <AddChecking GoBackEvents="PreviousStep" EventAfterSubmit="OnSuccessfulSubmit" />
        break;
    }
</div>

@code
{
    static private List<string> Steps = new List<string> { "1", "2", "3", "4", "5", "6", "7"};
    static private string CurrentStep = "1";
    private int currentIndex() => Steps.IndexOf(CurrentStep);
    private void StoreStepIntoState() => dispatcher.Dispatch(new WizardFundingProgressAction( wizardFundingProgressStep: CurrentStep ));
    private string WizardProgress()
    {
        var CurrentProgressStep = WizardProgressStep.Value.WizardFundingProgressStep;

        if(string.IsNullOrEmpty(CurrentProgressStep))
        {
            return "1";
        }
        else
        {
            return WizardProgressStep.Value.WizardFundingProgressStep!;
        }
    }

    public void OnSuccessfulSubmit()
    {
        if (currentIndex() < Steps.Count - 1)
        {
            CurrentStep = Steps[currentIndex() + 1];
        }
            StoreStepIntoState();
    }

    private void PreviousStep()
    {
        if (currentIndex() > 0)
        {
            CurrentStep = Steps[currentIndex() - 1];
        }
            StoreStepIntoState();
    }

    private void Navigate() => Navigation.NavigateTo("dashboard");
}